<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Purchase List</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            padding: 10px;
            text-align: left;
            border: 1px solid #ddd;
        }
        th {
            background-color: #f4f4f4;
        }
        button {
            padding: 5px 10px;
            margin: 0 5px;
            cursor: pointer;
            border: none;
            border-radius: 4px;
        }
        button:hover {
            background-color: #f0f0f0;
        }
        .received {
            background-color: #d4edda; /* Light green */
        }
    </style>
</head>
<body>

<h1>Purchase List</h1>
<table>
    <thead>
        <tr>
            <th>Code</th>
            <th>Date of Purchase</th>
            <th>Total Price</th>
            <th>Status</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody id="purchaseListBody">
        <!-- Purchase items will be populated here -->
    </tbody>
</table>

<script>
    // Function to load purchase details from local storage
    function loadPurchaseDetails() {
        const purchases = JSON.parse(localStorage.getItem('purchases')) || [];
        const purchaseListBody = document.getElementById('purchaseListBody');
        purchaseListBody.innerHTML = '';

        if (purchases.length === 0) {
            const row = document.createElement('tr');
            row.innerHTML = `<td colspan="5" style="text-align:center;">No purchases found.</td>`;
            purchaseListBody.appendChild(row);
            return;
        }

        purchases.forEach((purchase, index) => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${purchase.code}</td>
                <td>${new Date(purchase.date).toLocaleDateString()}</td>
                <td>$${(purchase.totalPrice).toFixed(2)}</td>
                <td class="${purchase.status === 'Received' ? 'received' : ''}">${purchase.status}</td>
                <td>
                    <button onclick="markAsReceived(${index})">Received</button>
                    <button onclick="deletePurchase(${index})">Delete</button>
                </td>
            `;
            purchaseListBody.appendChild(row);
        });
    }

    // Function to mark a purchase as received
    function markAsReceived(index) {
        const purchases = JSON.parse(localStorage.getItem('purchases')) || [];
        if (purchases[index]) {
            purchases[index].status = 'Received';
            localStorage.setItem('purchases', JSON.stringify(purchases));
            loadPurchaseDetails(); // Reload the table
        }
    }

    // Function to delete a purchase
    function deletePurchase(index) {
        const purchases = JSON.parse(localStorage.getItem('purchases')) || [];
        if (purchases[index]) {
            purchases.splice(index, 1);
            localStorage.setItem('purchases', JSON.stringify(purchases));
            loadPurchaseDetails(); // Reload the table
        }
    }

    // Load purchase details when the page loads
    window.onload = loadPurchaseDetails;
</script>

</body>
</html>
